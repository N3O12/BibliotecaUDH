# Generated by Django 5.0.1 on 2024-10-28 02:06

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'TB_GENERO',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('Escritor', 'Escritor'), ('Lector', 'Lector')], default='Lector', max_length=10)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('imagen_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('generos_favoritos', models.ManyToManyField(blank=True, related_name='usuarios_interesados', to='api.genero')),
            ],
            options={
                'db_table': 'TB_USUARIO',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('autor', models.CharField(max_length=100)),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('descripcion', models.TextField()),
                ('fecha_publicacion', models.DateField()),
                ('portada', models.ImageField(blank=True, null=True, upload_to='libros/portadas/')),
                ('url_archivo', models.FileField(blank=True, null=True, upload_to='libros/pdfs/')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('generos', models.ManyToManyField(db_table='TB_LIBRO_GENEROS_REL', related_name='libros', to='api.genero')),
            ],
            options={
                'db_table': 'TB_LIBRO',
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenido', models.TextField()),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comentarios', to='api.libro')),
            ],
            options={
                'db_table': 'TB_COMENTARIO',
            },
        ),
        migrations.CreateModel(
            name='HistorialVisualizacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_visualizacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.libro')),
            ],
            options={
                'db_table': 'TB_HISTORIAL_VISUALIZACION',
                'unique_together': {('usuario', 'libro')},
            },
        ),
        migrations.CreateModel(
            name='Favorito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_agregado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.libro')),
            ],
            options={
                'db_table': 'TB_FAVORITO',
                'unique_together': {('usuario', 'libro')},
            },
        ),
        migrations.CreateModel(
            name='LibroGenero',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genero', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.genero')),
                ('libro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.libro')),
            ],
            options={
                'db_table': 'TB_LIBRO_GENERO',
                'unique_together': {('libro', 'genero')},
            },
        ),
    ]
